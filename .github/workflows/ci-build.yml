name: Main Branch CI/CD

permissions:
  contents: read
  packages: write

on:
  push:
    branches:
      - main
    paths:
      - "Taucher/PT/**"

jobs:
  test-and-build:
    name: Test, Build and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: npm
          cache-dependency-path: Taucher/PT/Code/package-lock.json

      - name: Install dependencies
        run: npm ci
        working-directory: Taucher/PT/Code

      - name: Run ESLint
        run: npm run lint
        working-directory: Taucher/PT/Code

      - name: Run Unit Tests
        run: npm run test:unit
        working-directory: Taucher/PT/Code

      - name: Run Integration Tests
        run: npm run test:integration
        working-directory: Taucher/PT/Code

      - name: Run All Tests with Coverage
        run: npm test
        working-directory: Taucher/PT/Code

      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/noteapp
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=v1.0.{{run_number}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: Taucher/PT/Code
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
